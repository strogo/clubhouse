P5JSVARINTRO3_QUEST_NAME,P5JS - Changing colors with your mouse!,,,,
P5JSVARINTRO3_QUEST_SUBTITLE,What you'll do,,,,
P5JSVARINTRO3_QUEST_DESCRIPTION,"In part 3 of this activity, it's time to tie it all together and control the randomness with your mouse.",,,,
P5JSVARINTRO3_1,"Yay! You're back, <b>{{user_name}}</b>! Let's get interactive!",daemon3,,,
P5JSVARINTRO3_2,"First things first - let's get back to the p5.js code editor. You can load your previous sketch (if you saved it at <u><span insert_hyphens=""false"" foreground=""#3584E4"">http://editor.p5js.org</span></u> ), or get back to where we left off: <u><span insert_hyphens=""false"" foreground=""#3584E4"">https://editor.p5js.org/madetohack/sketches/PwEfO7Hl</span></u>",daemon3,,,
P5JSVARINTRO3_3,"From our last sketch, when you hit play you should see a square that randomly flashes colors. But what if we wanted to see the square only when we click?",daemon3,,,
P5JSVARINTRO3_4,"It turns out that <b>p5.js</b> has built-in ways to detect actions like ""you clicked the mouse"". They're called <b>events</b>, and it's really simple to use them!",daemon3,,,
P5JSVARINTRO3_5,"The <b>event</b> we're going to use is <tt><span insert_hyphens=""false"" foreground=""#287A8C"" background=""#FFFFFF"">mouseIsPressed()</span></tt>. You might recognize the form it uses - very similar to <tt><span insert_hyphens=""false"" foreground=""#287A8C"" background=""#FFFFFF"">random()</span></tt> from last time, except it doesn't need any other information to do its job. This event lets you tell your code to do something when the mouse is clicked or not clicked.",daemon3,,,
P5JSVARINTRO3_6,"Let's get going - Make a new line underneath <tt><span insert_hyphens=""false"" foreground=""#287A8C"" background=""#FFFFFF"">stroke(r,g,b);</span></tt>. On that line, type <tt><span insert_hyphens=""false"" foreground=""#287A8C"" background=""#FFFFFF"">if (mouseIsPressed == true) {</span></tt>",daemon3,,,
P5JSVARINTRO3_7,"This line of code isn't like any other line we've used before - let's break it down. First, we're starting with the word <tt><span insert_hyphens=""false"" foreground=""#287A8C"" background=""#FFFFFF"">if</span></tt>. That's a special word that tells <b>p5.js</b> that this line asks the program to make a decision - If the little bit of code in the parentheses ( <b>()</b> ) is <b>true</b>, then it will run the code inside the curly braces ( <b>{}</b> ). If it's <b>false</b>, that code won't run.",daemon3,,,
P5JSVARINTRO3_8,"The decision we're asking <b>p5.js</b> to make is whether <tt><span insert_hyphens=""false"" foreground=""#287A8C"" background=""#FFFFFF"">mouseIsPressed == true</span></tt>  What's that mean? Well, <tt><span insert_hyphens=""false"" foreground=""#287A8C"" background=""#FFFFFF"">mouseIsPressed</span></tt> detects if the mouse button is pressed or not. The <tt><span insert_hyphens=""false"" foreground=""#287A8C"" background=""#FFFFFF"">==</span></tt> is the code version of <b>is equal to</b>, and <b>true</b> is, well, true! So this code is asking ""is mouseIsPressed equal to true?"". More simply, that translates to ""is the mouse button pressed?""",daemon3,,,
P5JSVARINTRO3_9,"This kind of statement is called a <b>boolean</b> statement - it can only be true ot false, nothing else. Very useful for a computer program!",daemon3,,,
P5JSVARINTRO3_10,"Now, you might notice that there are some lines in your sketch highlighted in red. That's because we didn't close the <b>if statement</b> that we just created with an ending <tt><span insert_hyphens=""false"" foreground=""#287A8C"" background=""#FFFFFF"">}</span></tt>. Like <tt><span insert_hyphens=""false"" foreground=""#287A8C"" background=""#FFFFFF"">draw()</span></tt> and <tt><span insert_hyphens=""false"" foreground=""#287A8C"" background=""#FFFFFF"">setup()</span></tt>, <b>if statements</b> need have a set of curly braces ( <b>{}</b> )  after them to mark the code they control.",daemon3,,,
P5JSVARINTRO3_11,"Hmm, I wonder where we should put the closing curly brace ( <b>}</b> ) for this <b>if statement</b>? Oh, right - we want to control whether the rectangle draws or not... so let's surround our <tt><span insert_hyphens=""false"" foreground=""#287A8C"" background=""#FFFFFF"">rect(...</span></tt> code! After the line with <tt><span insert_hyphens=""false"" foreground=""#287A8C"" background=""#FFFFFF"">rect(...</span></tt> on it, create a new line and type <tt><span insert_hyphens=""false"" foreground=""#287A8C"" background=""#FFFFFF"">}</span></tt>. All the red should go away, and you can press <b>Play</b>!",daemon3,,,
P5JSVARINTRO3_12,"Cool, huh? I wonder what might happen if you replaced <tt><span insert_hyphens=""false"" foreground=""#287A8C"" background=""#FFFFFF"">mouseIsPressed == true</span></tt> with <tt><span insert_hyphens=""false"" foreground=""#287A8C"" background=""#FFFFFF"">mouseIsPressed == false</span></tt>?",daemon3,,,
P5JSVARINTRO3_13,"Interesting! Try moving other code into the <b>if statement</b> - Maybe you can add another <tt><span insert_hyphens=""false"" foreground=""#287A8C"" background=""#FFFFFF"">fill(...</span></tt> in there with a diffferent color!",daemon3,,,
P5JSVARINTRO3_14,"Yow, you're really becoming a pro with <b>p5.js</b>. I can't wait to see what we make in the future! See you later!",daemon3,,,
